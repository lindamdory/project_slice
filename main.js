function pageLoad() {
// to do app: 10 √ºres mez≈ë √°ll rendelkez√©se alap√©rtelmezetten, de hozz√° tudunk adni √∫jat (alatta 1 plusz gomb),
// √©s minden mez≈ëben elej√©n van checkbox, textinput mez≈ë √©s v√©g√©n egy t√∂rl√©s gomb

// 0. El≈ësz√∂r kommentben le√≠rjuk a l√©p√©seket

// 1. L√©trehozok egy v√°ltoz√≥t, amibe belerakom a rootot

let theRoot = document.getElementById("root");

// 2. Elt√°roljuk a minimum hosszat egy v√°ltoz√≥ba (sz√°m: 10, √ºgyf√©l v√°ltoztathatja az elv√°r√°st)

let minLength = 10;

// 3. T√∂bbsoros sz√∂vegk√©nt egy v√°ltoz√≥ba egy sor HTML strukt√∫r√°j√°t: 1-1 divbe kell 1 checkbox input, text input √©s t√∂rl√©s gomb

let oneLine = `
  <div class="oneLine">
    <input type="checkbox">
    <input type="text">
    <button class="delete">üóë</button>
  </div>
`; 

// 4. for ciklussal l√©trehozni az el≈ëz≈ë sort 10x, insertAdjacentHTML beforeenddel hozz√°adjuk a HTML-hez a 10 sort

for (let index = 0; index < minLength; index++) {

  theRoot.insertAdjacentHTML("beforeend", oneLine);

}

// 5. insertAdjacentHTML "afterend" (rooton k√≠v√ºlre) plusz gomb a hozz√°ad√°shoz

  theRoot.insertAdjacentHTML("afterend", `
  <div><button type="button">+ New Task</button></div>
  `);

// 6. click esem√©nyt adunk a plusz gombhoz, addevent click, a sort tartalmaz√≥ v√°ltoz√≥t hozz√°adjuk a root elemhez

// 7. classn√©v alapj√°n kijel√∂lm az √∂sszes t√∂rl√©s gombot queryselALllal √©s elt√°rolom egy v√°ltoz√≥ba

// 8. A 7.-ben √∂sszegy≈±jt√∂tt sok HTML elemre for ciklussal egy click esem√©nyt hozz√°adunk

// 9. Honnan tudjuk, hogy melyik esem√©nyre kattintottunk? Mert annak az outerHTML-j√©t kell majd kit√∂r√∂lni. Ez mentornak k√©rd√©s.

// 10. Commit, comment: project scope-j√°t √©s a feladatl√©p√©seket le√≠rtuk. Push.

}

window.addEventListener("load", pageLoad);